{"version":3,"sources":["src/app/App.tsx","src/app/core/history.ts","src/app/core/store.ts","src/app/components/Header.tsx","src/app/pages/Home.tsx","src/app/pages/Game.tsx","src/app/modules/game/Game.tsx","src/app/modules/game/Engine.ts","src/app/modules/game/config.ts","src/app/modules/game/next/index.ts","src/app/core/hmr.ts"],"names":[],"mappings":"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","file":"","sourcesContent":["import 'bulma/css/bulma.min.css';\nimport 'normalize.css/normalize.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Router, Route } from 'inferno-router';\nimport * as inferno from 'inferno';\nimport { Provider } from 'inferno-mobx';\n\nimport history from './core/history';\nimport store from './core/store';\n\nimport Header from 'app/components/Header';\n\nimport Home from 'app/pages/Home';\nimport Game from 'app/pages/Game';\n\nif (process.env.NODE_ENV !== 'production') {\n  require('app/core/hmr');\n}\n\ninferno.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <main>\n        <Header />\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/game\" component={Game} />\n      </main>\n    </Router>\n  </Provider>,\n\n  document.getElementById('app')\n);\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","class ApplicationStore {\n  constructor() {}\n}\n\nconst store = new ApplicationStore();\n\nexport default store;\n","import { Link } from 'inferno-router';\n\nconst Header = () => (\n  <div className=\"container\">\n    <nav className=\"navbar-menu\">\n      <Link to=\"/\" className=\"navbar-item\">\n        Home\n      </Link>\n      <Link to=\"/game\" className=\"navbar-item\">\n        Game\n      </Link>\n    </nav>\n  </div>\n);\n\nexport default Header;\n","const HomePage = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Home page</h1>\n  </div>\n);\n\nexport default HomePage;\n","import Game from 'app/modules/game/Game';\n\nconst GamePage = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Game</h1>\n    <Game />\n  </div>\n);\n\nexport default GamePage;\n","import { Component } from 'inferno';\nimport Engine from './Engine';\nimport { gameConfig, gameInitialState } from './config';\nimport next from './next';\nimport './game.css';\n\nclass Game extends Component {\n  canvas: any;\n  engine: any;\n  constructor(props) {\n    super(props);\n    this.canvas = null;\n  }\n\n  componentDidMount() {\n    this.startGame();\n  }\n\n  startGame = () => {\n    this.engine = new Engine(gameConfig, gameInitialState, this.canvas);\n    this.engine.run(next);\n  };\n\n  render() {\n    return (\n      <div className=\"game-container\">\n        <div className=\"game-canvas-container\">\n          <canvas\n            width={gameConfig.areaSize * gameConfig.scale}\n            height={gameConfig.areaSize * gameConfig.scale}\n            className=\"game-plot\"\n            id=\"game-canvas\"\n            ref={ref => (this.canvas = ref)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","type moveDirectionType = 'top' | 'bottom' | 'right' | 'left';\n\nexport interface GameState {\n  snakePosition: {\n    x: number;\n    y: number;\n  };\n\n  snakeTail: any[];\n  moveDirection: moveDirectionType;\n}\n\nexport interface GameConfig {\n  areaSize: number;\n  snakeLength: number;\n  scale: number;\n  speed: number;\n}\n\ninterface SnakeBlock {\n  x: number;\n  y: number;\n  moveDirection: moveDirectionType;\n}\n\nclass Engine {\n  gameState: GameState;\n  gameConfig: GameConfig;\n  canvas: any;\n  context: any;\n  next: any;\n  prevTime: any;\n  keyPressed: {\n    a: boolean;\n    s: boolean;\n    d: boolean;\n    w: boolean;\n  };\n  constructor(gameConfig: GameConfig, gameState: GameState, canvas) {\n    this.gameConfig = gameConfig;\n    this.gameState = gameState;\n    this.canvas = canvas;\n    this.context = this.canvas.getContext('2d');\n    this.keyPressed = {\n      a: false,\n      s: false,\n      d: false,\n      w: false,\n    };\n  }\n\n  run(next) {\n    this.next = next;\n    window.requestAnimationFrame(currentTime => {\n      this.step(currentTime);\n    });\n    this.initKeyController();\n  }\n\n  step(currentTime) {\n    if (!this.prevTime) {\n      this.prevTime = currentTime;\n    }\n\n    const timeDelta = currentTime - this.prevTime;\n\n    if (timeDelta > this.gameConfig.speed) {\n      this.gameState = this.next(\n        this.gameState,\n        this.gameConfig,\n        this.keyPressed\n      );\n      this.renderCanvas();\n      this.prevTime = currentTime;\n    }\n\n    window.requestAnimationFrame(currentTime => {\n      this.step(currentTime);\n    });\n  }\n\n  renderCanvas() {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.renderSnakeHead();\n    this.renderSnakeTail();\n  }\n\n  renderSnakeHead() {\n    this.context.beginPath();\n    this.context.rect(\n      this.gameState.snakePosition.x * this.gameConfig.scale,\n      (this.gameConfig.areaSize - this.gameState.snakePosition.y - 1) *\n        this.gameConfig.scale,\n      this.gameConfig.scale,\n      this.gameConfig.scale\n    );\n    this.context.stroke();\n  }\n\n  renderSnakeTail() {\n    const { scale, areaSize: size } = this.gameConfig;\n\n    this.gameState.snakeTail.map((block: SnakeBlock) => {\n      this.context.beginPath();\n\n      this.context.rect(\n        block.x * scale,\n        (size - block.y - 1) * scale,\n        scale,\n        scale\n      );\n      this.context.stroke();\n    });\n  }\n\n  initKeyController() {\n    const allowKeys = ['a', 's', 'd', 'w'];\n\n    window.onkeydown = e => {\n      if (allowKeys.indexOf(e.key) !== -1) {\n        this.keyPressed[e.key] = true;\n      }\n    };\n\n    window.onkeyup = e => {\n      if (allowKeys.indexOf(e.key) !== -1) {\n        this.keyPressed[e.key] = false;\n      }\n    };\n  }\n}\n\nexport default Engine;\n","import { GameConfig, GameState } from './Engine';\n\nexport const gameConfig: GameConfig = {\n  areaSize: 10,\n  snakeLength: 3,\n  scale: 20,\n  speed: 100,\n};\n\nexport const gameInitialState: GameState = {\n  snakePosition: {\n    x: 2,\n    y: 9,\n  },\n  moveDirection: 'left',\n  snakeTail: [\n    { x: 3, y: 9, moveDirection: 'left' },\n    { x: 4, y: 9, moveDirection: 'left' },\n    { x: 5, y: 9, moveDirection: 'left' },\n    { x: 6, y: 9, moveDirection: 'left' },\n  ],\n};\n","import { GameState, GameConfig } from '../Engine';\n\nconst moveSnakeBlock = ({ position, moveDirection, size }) => {\n  if (moveDirection === 'right') {\n    const x = position.x + 1;\n    return {\n      ...position,\n      x: x > size - 1 ? 0 : x,\n    };\n  }\n\n  if (moveDirection === 'left') {\n    const x = position.x - 1;\n    return {\n      ...position,\n      x: x < 0 ? size - 1 : x,\n    };\n  }\n\n  if (moveDirection === 'top') {\n    const y = position.y + 1;\n\n    return {\n      x: position.x,\n      y: y > size - 1 ? 0 : y,\n    };\n  }\n\n  if (moveDirection === 'bottom') {\n    const y = position.y - 1;\n\n    return {\n      ...position,\n      y: y < 0 ? size - 1 : y,\n    };\n  }\n};\n\nconst getNextMoveDirection = (moveDirection, keyPressed) => {\n  if (keyPressed.w && moveDirection !== 'bottom') {\n    return 'top';\n  }\n\n  if (keyPressed.s && moveDirection !== 'top') {\n    return 'bottom';\n  }\n\n  if (keyPressed.d && moveDirection !== 'left') {\n    return 'right';\n  }\n\n  if (keyPressed.a && moveDirection !== 'right') {\n    return 'left';\n  }\n\n  return moveDirection;\n};\n\nconst getSnakeTail = (\n  state: GameState,\n  config: GameConfig,\n  prevMoveDirection\n) => {\n  const snakeTailData = state.snakeTail.reduce(\n    (acc, snakeBlock) => {\n      const position = moveSnakeBlock({\n        position: { x: snakeBlock.x, y: snakeBlock.y },\n        moveDirection: snakeBlock.moveDirection,\n        size: config.areaSize,\n      });\n\n      const nextSnakeBlock = {\n        ...snakeBlock,\n        ...position,\n        moveDirection: acc.prevMoveDirection,\n      };\n\n      return {\n        newStakeTail: [...acc.newStakeTail, nextSnakeBlock],\n        prevMoveDirection: snakeBlock.moveDirection,\n      };\n    },\n    { newStakeTail: [], prevMoveDirection }\n  );\n\n  return snakeTailData.newStakeTail;\n};\n\nconst next = (state: GameState, config: GameConfig, keyPressed) => {\n  const prevMoveDirection = state.moveDirection;\n  const nextMoveDirection = getNextMoveDirection(prevMoveDirection, keyPressed);\n\n  const snakePosition = moveSnakeBlock({\n    position: state.snakePosition,\n    moveDirection: state.moveDirection,\n    size: config.areaSize,\n  });\n\n  const snakeTail = getSnakeTail(state, config, prevMoveDirection);\n\n  return {\n    ...state,\n    moveDirection: nextMoveDirection,\n    snakePosition,\n    snakeTail,\n  };\n};\n\nexport default next;\n","const customizedHMRPlugin = {\n  hmrUpdate: ({ type, path, content, dependants }) => {\n    // Dependants only available when emitHMRDependencies = true\n    if (type === 'js') {\n      FuseBox.flush(file => {\n        if (/core/.test(file) || /history/.test(file)) {\n          return false;\n        }\n        return true;\n      });\n      FuseBox.dynamic(path, content);\n      if (FuseBox.mainFile) {\n        FuseBox.import(FuseBox.mainFile);\n      }\n      return true;\n    }\n  },\n};\n\nlet alreadyRegistered = false;\nif (!window.hmrRegistered) {\n  window.hmrRegistered = true;\n  FuseBox.addPlugin(customizedHMRPlugin);\n}\n"]}